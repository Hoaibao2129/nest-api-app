openapi: 3.0.0
info:
  title: API NEST JS
  version: 1.0.0
  description: STUDY NODEJS (NEST-JS) API

paths:
  /users:
    post:
      tags:
        - User
      summary: Create a new user
      description: Endpoint to create a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - password
                - tel
                - email
                - address
              properties:
                name:
                  type: string
                  description: User's name.
                password:
                  type: string
                  description: User's password.
                tel:
                  type: string
                  description: User's telephone number.
                email:
                  type: string
                  description: User's email address.
                address:
                  type: string
                  description: User's address.
      responses:
        "201":
          description: User created successfully.
        "400":
          description: Bad request. Invalid input or missing fields.
        "409":
          description: Conflict. User with the provided telephone number already exists.
        "500":
          description: Internal server error.

  /users/{userId}:
    get:
      tags:
        - User
      summary: Get a user by ID
      description: Endpoint to retrieve a user by their ID.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: The ID of the user to retrieve.
      responses:
        "200":
          description: User found and returned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int32
                    description: User's ID.
                  name:
                    type: string
                    description: User's name.
                  password:
                    type: string
                    description: User's password.
                  tel:
                    type: string
                    description: User's telephone number.
                  email:
                    type: string
                    description: User's email address.
                  address:
                    type: string
                    description: User's address.
                  token:
                    type: string
                    description: User's authentication token.
        "400":
          description: Bad request. Invalid user ID format.
        "404":
          description: Not found. User with the specified ID does not exist.
        "500":
          description: Internal server error.

    put:
      tags:
        - User
      summary: Update a user by ID
      description: Endpoint to update a user by their ID.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: The ID of the user to update.
        - name: body
          in: requestBody
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: User's name.
                  password:
                    type: string
                    description: User's password.
                  tel:
                    type: string
                    description: User's telephone number.
                  email:
                    type: string
                    description: User's email address.
                  address:
                    type: string
                    description: User's address.
                  token:
                    type: string
                    description: User's authentication token.
                required:
                  - name
                  - password
                  - tel
                  - email
                  - address
      responses:
        "200":
          description: User updated successfully.
        "400":
          description: Bad request. Invalid user ID format or invalid input.
        "404":
          description: Not found. User with the specified ID does not exist.
        "500":
          description: Internal server error.

    delete:
      tags:
        - User
      summary: Delete a user by ID
      description: Endpoint to delete a user by their ID.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          description: The ID of the user to delete.
      responses:
        "200":
          description: User deleted successfully.
        "400":
          description: Bad request. Invalid user ID format.
        "404":
          description: Not found. User with the specified ID does not exist.
        "500":
          description: Internal server error.

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        password:
          type: string
        tel:
          type: string
        email:
          type: string
        address:
          type: string
        token:
          type: string
      required:
        - name
        - password
        - tel
        - email
        - address
